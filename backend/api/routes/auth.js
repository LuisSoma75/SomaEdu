import express from "express";
import pool from "../utils/db.js"; // Cambia la ruta si est√° en otro lugar
import bcrypt from "bcryptjs";

const router = express.Router();

router.post("/login", async (req, res) => {
  // 1. Imprime el body recibido
  console.log("üü° [LOGIN] Body recibido:", req.body);

  const { correo, contrase√±a } = req.body;
  if (!correo || !contrase√±a) {
    console.log("üî¥ [LOGIN] Falta correo o contrase√±a");
    return res.json({ success: false, message: "Correo y contrase√±a son obligatorios" });
  }

  try {
    // 2. Imprime la consulta que se har√°
    console.log('üîµ [LOGIN] Consultando usuario en BD...');
    // OJO: Aseg√∫rate que el nombre de la tabla y columna sean EXACTOS ("Usuarios" y correo)
    const result = await pool.query('SELECT * FROM "Usuarios" WHERE correo = $1', [correo]);
    console.log("üü£ [LOGIN] Resultado SQL:", result.rows);

    if (result.rows.length === 0) {
      console.log("üî¥ [LOGIN] Usuario no encontrado");
      return res.json({ success: false, message: "Usuario no encontrado" });
    }

    const usuario = result.rows[0];
    // 3. Imprime para depurar contrase√±a (NO imprimas hashes reales en producci√≥n)
    console.log("üü¢ [LOGIN] Verificando contrase√±a...");
    console.log("Contrase√±a recibida:", contrase√±a);
    console.log("Hash en base:", usuario.contrase√±a);

    const passwordOk = await bcrypt.compare(contrase√±a, usuario.contrase√±a);

    if (!passwordOk) {
      console.log("üî¥ [LOGIN] Contrase√±a incorrecta");
      return res.json({ success: false, message: "Contrase√±a incorrecta" });
    }

    // 4. Si todo va bien, imprime el rol y devuelve tambi√©n el nombre y el id de usuario
    console.log("‚úÖ [LOGIN] Login correcto. id_rol:", usuario.id_rol);

    console.log("RESPUESTA DE LOGIN:", {
  nombre: usuario.Nombre,
  // otros campos...
});

    res.json({
      success: true,
      id_rol: usuario.id_rol,
      id_usuario: usuario.id_usuario,     // Por si necesitas el id del usuario
      nombre: usuario.Nombre,             // Devuelve el nombre exacto para mostrarlo en frontend
      correo: usuario.correo              // (Opcional) Devuelve el correo si lo quieres guardar tambi√©n
    });
  } catch (error) {
    // 5. Error inesperado
    console.error("‚ùå [LOGIN] Error inesperado:", error);
    res.status(500).json({ success: false, message: "Error interno del servidor" });
  }
});

export default router;
